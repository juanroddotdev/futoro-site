// Form grid layouts
@import "../abstracts/variables";

.form-grid {
  // Base grid settings
  display: grid;
  gap: $spacing-unit * 1; // 4 units in Tailwind (gap-4)
  margin-top: $spacing-unit * 2; // mt-8

  // Mobile: single column (handled by default grid behavior)

  // Medium screens
  @media (min-width: map-get($breakpoints, "sm")) {
    margin-top: $spacing-unit * 3; // sm:mt-12
  }

  // Desktop: 3 columns bento grid
  @media (min-width: map-get($breakpoints, "lg")) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    grid-auto-rows: auto;
  }

  // Bento grid layout classes
  .bento-cell {
    position: relative;

    &--span-2 {
      @media (min-width: map-get($breakpoints, "lg")) {
        grid-row: span 2 / span 2;
      }
    }

    &--col-2 {
      @media (min-width: map-get($breakpoints, "lg")) {
        grid-column-start: 2;
      }
    }

    &--row-2 {
      @media (min-width: map-get($breakpoints, "lg")) {
        grid-row-start: 2;
      }
    }

    &--row-1-mobile {
      @media (max-width: map-get($breakpoints, "lg")) {
        grid-row-start: 1;
      }
    }

    &--row-3-mobile {
      @media (max-width: map-get($breakpoints, "lg")) {
        grid-row-start: 3;
      }
    }
  }

  // Bento cell styling
  .bento-content {
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    border-radius: calc(var(--radius) + 1px);

    &--left-rounded {
      @media (min-width: map-get($breakpoints, "lg")) {
        border-top-left-radius: calc(2rem + 1px);
        border-bottom-left-radius: calc(2rem + 1px);
      }
    }

    &--right-rounded {
      @media (min-width: map-get($breakpoints, "lg")) {
        border-top-right-radius: calc(2rem + 1px);
        border-bottom-right-radius: calc(2rem + 1px);
      }

      @media (max-width: map-get($breakpoints, "lg")) {
        border-bottom-left-radius: calc(2rem + 1px);
        border-bottom-right-radius: calc(2rem + 1px);
      }
    }

    &--top-rounded-mobile {
      @media (max-width: map-get($breakpoints, "lg")) {
        border-top-left-radius: calc(2rem + 1px);
        border-top-right-radius: calc(2rem + 1px);
      }
    }
  }

  // Cell background and border
  .bento-bg {
    position: absolute;
    inset: 1px;
    background-color: hsl(var(--card));
    border-radius: var(--radius);

    &--left-rounded {
      @media (min-width: map-get($breakpoints, "lg")) {
        border-top-left-radius: 2rem;
        border-bottom-left-radius: 2rem;
      }
    }

    &--right-rounded {
      @media (min-width: map-get($breakpoints, "lg")) {
        border-top-right-radius: 2rem;
        border-bottom-right-radius: 2rem;
      }

      @media (max-width: map-get($breakpoints, "lg")) {
        border-bottom-left-radius: 2rem;
        border-bottom-right-radius: 2rem;
      }
    }

    &--top-rounded-mobile {
      @media (max-width: map-get($breakpoints, "lg")) {
        border-top-left-radius: 2rem;
        border-top-right-radius: 2rem;
      }
    }
  }

  // Cell border/shadow
  .bento-border {
    pointer-events: none;
    position: absolute;
    inset: 1px;
    border-radius: var(--radius);
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --tw-ring-color: hsla(var(--ring), 0.1);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 0 1px var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow, 0 0 #0000);

    &--left-rounded {
      @media (min-width: map-get($breakpoints, "lg")) {
        border-top-left-radius: 2rem;
        border-bottom-left-radius: 2rem;
      }
    }

    &--right-rounded {
      @media (min-width: map-get($breakpoints, "lg")) {
        border-top-right-radius: 2rem;
        border-bottom-right-radius: 2rem;
      }

      @media (max-width: map-get($breakpoints, "lg")) {
        border-bottom-left-radius: 2rem;
        border-bottom-right-radius: 2rem;
      }
    }

    &--top-rounded-mobile {
      @media (max-width: map-get($breakpoints, "lg")) {
        border-top-left-radius: 2rem;
        border-top-right-radius: 2rem;
      }
    }
  }

  // Content sections
  .bento-header {
    padding: $spacing-unit * 1.5 $spacing-unit * 1.5 $spacing-unit * 0.5;

    @media (min-width: map-get($breakpoints, "sm")) {
      padding: $spacing-unit * 2 $spacing-unit * 2 $spacing-unit * 0.5;
    }

    p {
      font-size: 1.125rem;
      line-height: 1.75rem;
      font-weight: 500;
      letter-spacing: -0.025em;
      color: hsl(var(--foreground));

      @media (max-width: map-get($breakpoints, "lg")) {
        text-align: center;
      }
    }
  }

  .bento-body {
    padding: $spacing-unit * 1.5;
  }

  // Base styles for form items
  .form-item {
    border: 2px solid blue;
    padding: $spacing-unit * 2;
    border-radius: 12px;
    /* opacity: 0.5; */

    // Apply theme-specific styles using direct selectors
    @each $theme-name, $theme-map in $themes {
      .theme-#{$theme-name} & {
        background-color: map-get($theme-map, "neutral");
        border: 2px solid map-get($theme-map, "primary");
      }
    }

    // Grid column spans for medium screens
    @media (min-width: map-get($breakpoints, "md")) {
      // About section
      &--about-name {
        grid-column: 1 / span 2;
      }
      &--about-desc {
        grid-column: 3 / span 2;
      }
      &--about-audience {
        grid-column: 1 / span 2;
      }
      &--about-goals {
        grid-column: 3 / span 2;
      }
      &--about-existing-website {
        grid-column: 1 / span 2;
      }
      &--about-domain-status {
        grid-column: 3 / span 2;
      }

      // Design section
      &--design-visual-identity {
        grid-column: span 2;
      }
      &--design-inspiration {
        grid-column: span 2;
      }
      &--design-aesthetic {
        grid-column: span 2;
      }

      // Functionality section
      &--functionality-pages {
        grid-column: span 2;
      }
      &--functionality-features {
        grid-column: span 2;
      }

      // Logistics section
      &--logistics-budget {
        grid-column: span 1;
      }
      &--logistics-contact {
        grid-column: span 1;
      }
      &--logistics-feedback {
        grid-column: span 2;
      }
    }

    // Grid column spans for large screens
    @media (min-width: map-get($breakpoints, "lg")) {
      // About section
      &--about-name {
        grid-column: 1 / 5;
        grid-row: 1 / 2;
      }
      &--about-desc {
        grid-column: 5 / -1;
        grid-row: 1 / 4;
      }
      &--about-audience {
        grid-column: 1 / 4;
        grid-row: 2 / 5;
      }
      &--about-goals {
        grid-column: 1 / 4;
        grid-row: 5 / -1;
      }
      &--about-existing-website {
        grid-column: 4/-1;
        grid-row: 4 / -1;
      }
      &--about-domain-status {
        grid-column: 5 / span 3;
      }

      // Design section
      &--design-visual-identity {
        grid-column: span 2;
      }
      &--design-inspiration {
        grid-column: span 2;
      }
      &--design-aesthetic {
        grid-column: span 2;
      }

      // Functionality section
      &--functionality-pages {
        grid-column: span 2;
      }
      &--functionality-features {
        grid-column: span 2;
      }

      // Logistics section
      &--logistics-budget {
        grid-column: span 1;
      }
      &--logistics-contact {
        grid-column: span 1;
      }
      &--logistics-feedback {
        grid-column: span 2;
      }
    }
  }
}
.bento-section {
  background-color: white;
  padding: 2em;
  &--heading {
    h2 {
      font-size: 1.5rem; // text-2xl
      font-weight: 600; // font-semibold
      margin-bottom: 0;
      padding: $spacing-unit * 1.5 0; // py-2
      z-index: 10;
    }
  }
  &--description {
    p {
      font-size: 1.125rem; // text-lg
      font-weight: 400; // font-normal
      margin-bottom: 0;
      padding: $spacing-unit * 1.5 0; // py-2
      z-index: 10;
    }
  }
}

.parent-grid {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-auto-rows: auto; /* Use auto rows instead of fixed template */
  gap: 8px;
  height: 100%;
  /* Removed min-height to allow natural sizing */
  grid-auto-flow: row dense; /* Improve item placement */
}
.grid-item {
  border: 2px solid black;
  border-radius: 16px;
  padding: 1em;
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: fit-content; /* Make height fit content */
  align-self: start; /* Prevent stretching to match other items */
  &--about-name, .div2 {
    grid-column: span 4 / span 4;
    grid-row: span 3 / span 3;
    grid-row-start: 3;
  }
  &--about-desc, .div3 {
    grid-column: span 4 / span 4;
    grid-row: span 4 / span 4;
    grid-column-start: 5;
    grid-row-start: 3;

    // multiselect styles in _client-form.scss
  }
  &--about-audience, .div4 {
    grid-column: span 4 / span 4;
    grid-row: span 4 / span 4;
    grid-row-start: 6;
  }
  &--about-goals, .div5 {
    grid-column: span 4 / span 4;
    grid-row: span 6 / span 6;
    grid-column-start: 5;
    grid-row-start: 7;
  }
  &--about-existing-website, .div6 {
    grid-column: span 4 / span 4;
    grid-row: auto; /* Allow this to size based on content */
    grid-column-start: 5;
    grid-row-start: 10;
    height: auto !important; /* Force height to be based on content */
    min-height: 0; /* Remove any minimum height constraints */
    overflow: visible; /* Ensure content isn't clipped */
  }
}

.div1 {
  grid-column: span 8 / span 8;
  grid-row: span 2 / span 2;
}

/* .div2 {
  grid-column: span 4 / span 4;
  grid-row: span 3 / span 3;
  grid-row-start: 3;
} */

.div3 {
  grid-column: span 4 / span 4;
  grid-row: span 4 / span 4;
  grid-column-start: 5;
  grid-row-start: 3;
}

.div4 {
  grid-column: span 4 / span 4;
  grid-row: span 4 / span 4;
  grid-row-start: 6;
}

.div5 {
  grid-column: span 4 / span 4;
  grid-row: span 6 / span 6;
  grid-column-start: 5;
  grid-row-start: 7;
}

.div6 {
  grid-column: span 4 / span 4;
  grid-row: auto; /* Allow this to size based on content */
  grid-row-start: 10;
  height: auto !important; /* Force height to be based on content */
  min-height: 0; /* Remove any minimum height constraints */
  overflow: visible; /* Ensure content isn't clipped */
}

/* Special class for containers that need to grow/shrink dynamically */
/* .dynamic-height-container {
  height: auto !important;
  min-height: 0 !important;
  max-height: none !important;
  align-self: start !important;
  grid-row: auto !important;
  contain: none !important;
  overflow: visible !important;
} */
