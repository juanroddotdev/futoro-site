// Custom Horizontal Scroll Component Styles
@import '../../abstracts/variables';
@import '../../abstracts/mixins';

.horizontal-struggles {
  position: relative;
  min-height: 200vh; // Minimum height to accommodate scrolling
  overflow-x: hidden; // Prevent horizontal scrollbar
  z-index: 1; // Ensure proper stacking
  
  // Force parent containers to respect the section's height
  &::after {
    content: '';
    display: block;
    height: 1px; // Minimal height
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    pointer-events: none; // Don't interfere with interactions
  }
}

// Add styles for parent containers
:root {
  --horizontal-struggles-height: 200vh; // Default value
}

.playground-view .main-content {
  min-height: var(--horizontal-struggles-height, 200vh);
}

.horizontal-struggles {
  position: relative;
  min-height: 200vh; // Minimum height to accommodate scrolling
  overflow-x: hidden; // Prevent horizontal scrollbar
  
  .container {
    position: relative;
    height: 100%;
    width: 100%;
    overflow: hidden;
  }
  
  .section-title {
    text-align: center;
    margin-bottom: 2rem;
    font-size: 2.5rem;
    font-weight: 700;
  }
  
  .row-container {
    position: relative;
    padding: 2rem 0;
    height: 100vh; // Full viewport height
    width: 100%;
    overflow: hidden;
    
    &.is-fixed {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background-color: var(--theme-background);
    }
  }
  
  // Add styles for when the section is complete
  &.section-complete {
    .row-container {
      position: absolute;
      bottom: 0;
      top: auto;
    }
  }
  
  .rows-wrapper {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  
  .row {
    position: relative;
    height: 400px; // Fixed height for rows
    width: 100%;
    overflow: hidden;
  }
  
  .animation-wrap {
    position: relative;
    height: 100%;
    display: flex;
    will-change: transform; // Optimize for animation
  }
  
  .item {
    flex: 0 0 auto;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease, opacity 0.5s ease;
    
    &.struggle-card, &.solution-card {
      max-width: 375px; /* Set max width to 375px */
      width: 100%; /* Ensure it takes full width up to max-width */
      margin: 0 1rem; /* Add some margin between cards */
      
      .icon-imprint {
        opacity: 0.1;
        transition: opacity 0.3s ease;
      }
      
      &:hover {
        .icon-imprint {
          opacity: 0.2;
        }
      }
    }
    
    &.title-card {
      padding: 0 2rem; /* Add some padding to the title card */
    }
  }
  
  // Theme-specific icon styles
  :deep(.theme-neon-horizon), :deep(.theme-digital-sunset), :deep(.theme-retro-wave) {
    .icon-imprint svg {
      filter: opacity(0.3)
        drop-shadow(0 1px 1px rgba(255, 255, 255, 0.15))
        drop-shadow(0 -1px 1px rgba(0, 0, 0, 0.3))
        drop-shadow(0 0 2px rgba(255, 255, 255, 0.1));
    }
  }

  :deep(.theme-pastel-future) {
    .icon-imprint svg {
      filter: opacity(0.15)
        drop-shadow(0 1px 1px rgba(255, 255, 255, 0.2))
        drop-shadow(0 -1px 1px rgba(0, 0, 0, 0.1));
    }
  }
}

// Add styles to ensure elements are properly trackable
.playground-view {
  position: relative; // Ensure position is set for tracking
  z-index: 1;
}

.row-container.struggles-container {
  position: relative; // Ensure position is set for tracking
  z-index: 2;
  
  &.is-sticky {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;
  }
}

// Add styles for the debug info
.debug-info {
  position: fixed;
  top: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 10px;
  border-radius: 4px;
  font-size: 12px;
  z-index: 1000;
  
  div {
    margin-bottom: 5px;
  }
}

// Add styles for the fixed container
.row-container.struggles-container {
  &.is-fixed {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh; /* Full viewport height */
    z-index: 10;
    display: flex;
    flex-direction: column;
    justify-content: center; /* Center content vertically */
  }
}

// Add styles for the spacer
#struggles-spacer {
  display: block;
  width: 100%;
}

// Ensure the section has proper height
.horizontal-struggles {
  position: relative;
  min-height: 200vh; /* Minimum height to accommodate scrolling */
  overflow-x: hidden; /* Prevent horizontal scrollbar */
  z-index: 1; /* Ensure proper stacking */
}

// Add body styles for scroll locking
/* body.scroll-locked {
  overflow: hidden;
} */

// Add styles for reverse direction
.horizontal-struggles.reverse {
  .animation-wrap.to-left {
    // Initial position: title card at right edge of viewport
    // Other items overflow to the left
    display: flex;
    flex-direction: row;
    justify-content: flex-end; // Align items to the end (right)
    
    // Ensure the title card is the last item (rightmost)
    .item.title-card {
      order: 1;
    }
    
    // Solution cards come before the title card (to the left)
    .item.struggle-card {
      order: 0;
    }
  }
  
  // Ensure the row has enough width
  .row {
    width: 100%;
    overflow: visible;
  }
  
  // Make sure the animation wrap has enough width
  .animation-wrap {
    width: max-content;
    min-width: 200%;  // Ensure it's wider than the viewport
  }
}

// Center the title card in the viewport
.horizontal-struggles.reverse {
  .rows-wrapper {
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center; // Center vertically
  }
  
  .row {
    width: 100%;
    display: flex;
    justify-content: center; // Center horizontally
    position: relative;
  }
  
  .animation-wrap.to-left {
    width: 100%;
    display: flex;
    justify-content: center; // Center content
  }
  
  // Create a proper row of cards
  .animation-wrap.to-left {
    width: max-content; // Allow content to determine width
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    position: relative;
    left: 50%; // Start from center of viewport
    transform: translateX(-50%); // Center the entire row
  }
  
  // Title card centered
  .item.title-card {
    max-width: 375px;
    width: 100%;
    text-align: center;
    order: 3; // Place at the end of the flex row
  }
  
  // Solution cards in a row
  .item.solution-card {
    max-width: 375px;
    width: 100%;
    position: relative; // Change from absolute to relative
    margin: 0 1rem; // Add margin between cards
    
    &:nth-child(1) {
      order: 2; // Second in the row (right before title)
    }
    
    &:nth-child(2) {
      order: 1; // First in the row (leftmost)
    }
  }
}
